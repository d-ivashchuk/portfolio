"use strict";var precacheConfig=[["/firebaseApp/index.html","5fb03c0000259a40cef4f606cd7fac11"],["/firebaseApp/static/js/main.10c6a67a.js","73e0a18257bea6eb2ff6f325fafc4e31"],["/firebaseApp/static/media/bg.a791b152.svg","a791b152ee591c27fbc427be3e423b3e"],["/firebaseApp/static/media/css3.549a6229.svg","549a622977d50faeddb7b632ff5ce375"],["/firebaseApp/static/media/firebase-colored.d1842f48.svg","d1842f486fefbea89874f12978dae490"],["/firebaseApp/static/media/firebase.e9cdd2bc.svg","e9cdd2bc0f0aef5628e8add4568908f9"],["/firebaseApp/static/media/gatsby.f6e89b0c.svg","f6e89b0cb7b9a5d54458e6f31185527f"],["/firebaseApp/static/media/git.088b353a.svg","088b353a6de2a9a915553b352dd1ad4c"],["/firebaseApp/static/media/github.ff539b9a.svg","ff539b9afb4e6ca5115e02636ef5f73c"],["/firebaseApp/static/media/html5.d84af59a.svg","d84af59a7dc3b0182ef6b1e07397bdde"],["/firebaseApp/static/media/javascript-colored.f90aacb1.svg","f90aacb103491a1a6ed5414e3ccb5711"],["/firebaseApp/static/media/javascript.a2353fc4.svg","a2353fc4a6b1cc6766b9d1b0840bdb96"],["/firebaseApp/static/media/node-dot-js.86579c7f.svg","86579c7f36cbb4dcfd90d241ab2380b4"],["/firebaseApp/static/media/profile-picture.eb92e734.jpeg","eb92e7346920d408f9340b51660f49c8"],["/firebaseApp/static/media/react-colored.57f85b0f.svg","57f85b0fe7f2174bbab4a1fdd65ba02b"],["/firebaseApp/static/media/react.41a1ccf8.svg","41a1ccf81c3a047f65b55e4e6796d827"],["/firebaseApp/static/media/redux.16f98df2.svg","16f98df260d74109943bc8862bd19e82"],["/firebaseApp/static/media/webpack.a19d580b.svg","a19d580b61cd1d0409efd100a0d95977"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],r=new URL(a,self.location),n=createCacheKey(r,hashParamName,t,/\.\w{8}\./);return[r.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(r){return setOfCachedUrls(r).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return r.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),r="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,r),e=urlsToCacheKeys.has(t));var n="/firebaseApp/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});